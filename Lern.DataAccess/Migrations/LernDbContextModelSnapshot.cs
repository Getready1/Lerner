// <auto-generated />
using Lern.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Lern.DataAccess.Migrations
{
    [DbContext(typeof(LernDbContext))]
    partial class LernDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Lern.Models.Word", b =>
                {
                    b.Property<int>("WordId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Artikel");

                    b.Property<string>("Text");

                    b.HasKey("WordId");

                    b.ToTable("Words");

                    b.HasData(
                        new
                        {
                            WordId = 1,
                            Artikel = 2,
                            Text = "Literatur"
                        },
                        new
                        {
                            WordId = 2,
                            Artikel = 2,
                            Text = "Werbung"
                        },
                        new
                        {
                            WordId = 3,
                            Artikel = 1,
                            Text = "Detektiv"
                        },
                        new
                        {
                            WordId = 4,
                            Artikel = 2,
                            Text = "Notiz"
                        },
                        new
                        {
                            WordId = 5,
                            Artikel = 2,
                            Text = "Einkaufstasche"
                        },
                        new
                        {
                            WordId = 6,
                            Artikel = 1,
                            Text = "Schriftsteller"
                        },
                        new
                        {
                            WordId = 7,
                            Artikel = 1,
                            Text = "Ofen"
                        },
                        new
                        {
                            WordId = 8,
                            Artikel = 2,
                            Text = "Zeit"
                        },
                        new
                        {
                            WordId = 9,
                            Artikel = 2,
                            Text = "Zitrone"
                        },
                        new
                        {
                            WordId = 10,
                            Artikel = 2,
                            Text = "Marmelade"
                        },
                        new
                        {
                            WordId = 11,
                            Artikel = 3,
                            Text = "Loch"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
